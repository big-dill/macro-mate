/**
 * addTagify
 *
 * A wrapper which can be used in the view template so that the URL for the API call can
 * be set by django. The rest is a script for setting up the tags.
 *
 * @param {string} url
 * @param {number=} maxResults
 */
function addTagify(url, maxResults) {
  // #id_tags is generated by django's form automatically
  const input = document.querySelector("#id_tags");
  // create 'Tagify' object from tagify library. Whitelist in the tag list
  const tagify = new Tagify(input, { whitelist: [] });
  // listen to any keystrokes, execute callback below
  tagify.on("input", onInput);

  // callback
  function onInput(e) {
    // reset the whitelist
    tagify.settings.whitelist.length = 0;
    // show loading animation and hide the suggestions dropdown
    tagify.loading(true).dropdown.hide.call(tagify);
    // get search_string from input
    const value = e.detail.value;

    // AJAX get request (shorthand for AJAX)
    // url will be macro_mate's TAGS API
    $.get({
      url: url,
      data: {
        contains: value, // Use the value taken from the input
        max_results: 10,
      },
      dataType: "json",
    }).done(function(whitelist) {
      // update inwhitelist Array in-place
      tagify.settings.whitelist.splice(0, whitelist.length, ...whitelist);
      // render the suggestions dropdown
      tagify.loading(false).dropdown.show.call(tagify, value);
    });
  }
}
